# pagination_utils.py
import math
import logging
from ssl import SSLContext
from typing import List, Tuple, Any
from aiogram import Router, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

logger = logging.getLogger(__name__)

# –ö–û–ù–°–¢–ê–ù–¢–ê: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —É–¥–∞–ª–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
ADMIN_DELETE_ITEMS_PER_PAGE = 10

async def create_paginated_keyboard(
    items: List[Tuple], # –°–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    page: int, # –ù–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–Ω–∞—á–∏–Ω–∞—è —Å 1)
    items_per_page: int, # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    total_items: int, # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    pagination_callback_prefix: str, # –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback_data –∫–Ω–æ–ø–æ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "navigate_delete_course")
    item_callback_prefix: str, # –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback_data –∫–Ω–æ–ø–æ–∫ —Å–∞–º–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "del_course_by_id")
    item_id_index: int, # –ò–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ—Ä—Ç–µ–∂–µ items, –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è ID (–¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞)
    item_name_index: int, # –ò–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ—Ä—Ç–µ–∂–µ items, –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è –∏–º–µ–Ω–µ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    row_width: int = 2 # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Ä—è–¥—É
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –∫–Ω–æ–ø–∫–∞–º–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏,
    –≤–∫–ª—é—á–∞—è –∫–Ω–æ–ø–∫—É "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É".
    callback_data –¥–ª—è –∫–Ω–æ–ø–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: [item_callback_prefix]:[item_identifier]:page:[current_page]
    callback_data –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É": goto_delete_page:[category]
    """
    all_rows = []
    item_buttons = []

    total_pages = math.ceil(total_items / items_per_page)

    for item in items:
        item_identifier = item[item_id_index]
        button_text = item[item_name_index]

        # –§–æ—Ä–º–∏—Ä—É–µ–º callback_data –¥–ª—è –∫–Ω–æ–ø–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–∞, –≤–∫–ª—é—á–∞—è –Ω–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        callback_data = f"{item_callback_prefix}:{item_identifier}:page:{page}"

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã callback_data (–≤–∞–∂–Ω–æ!)
        if len(callback_data.encode('utf-8')) > 64:
            logger.warning(f"–î–ª–∏–Ω–Ω–∞—è callback_data –¥–ª—è '{button_text}' ({item_callback_prefix}): {callback_data} ({len(callback_data.encode('utf-8'))} bytes). –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã.")

        item_buttons.append(InlineKeyboardButton(text=f"‚ùå {button_text}", callback_data=callback_data)) # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ "‚ùå" –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ row_width –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –∫–∞–∫ —Ä—è–¥—ã –≤ all_rows
    for i in range(0, len(item_buttons), row_width):
        all_rows.append(item_buttons[i : i + row_width])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    navigation_buttons = []
    if page > 1:
        navigation_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"{pagination_callback_prefix}:{page - 1}"))

    if total_pages > 0:
        # –ö–Ω–æ–ø–∫–∞ —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (ignore –∏–ª–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–ª—è –∏–Ω—Ñ–æ)
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º ignore, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –Ω–µ –≤—ã–∑—ã–≤–∞–ª–∞ callback query
        navigation_buttons.append(InlineKeyboardButton(text=f"{page}/{total_pages}", callback_data="ignore_page_info")) # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ ignore_page_info

    if page < total_pages:
        navigation_buttons.append(InlineKeyboardButton(text="‚û°Ô∏è –î–∞–ª–µ–µ", callback_data=f"{pagination_callback_prefix}:{page + 1}"))

    if navigation_buttons:
        all_rows.append(navigation_buttons) # –î–æ–±–∞–≤–ª—è–µ–º —Ä—è–¥ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≤ all_rows

    # --- –î–û–ë–ê–í–õ–ï–ù–ê –ö–ù–û–ü–ö–ê "–ü–ï–†–ï–ô–¢–ò –ù–ê –°–¢–†–ê–ù–ò–¶–£" ---
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è callback_data –∫–Ω–æ–ø–∫–∏ "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É"
    category = pagination_callback_prefix.replace("navigate_delete_", "")
    all_rows.append([InlineKeyboardButton(text="üî¢ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É", callback_data=f"goto_delete_page:{category}")])
    # --- –ö–û–ù–ï–¶ –î–û–ë–ê–í–õ–ï–ù–ù–û–ô –ö–ù–û–ü–ö–ò ---

    # –ö–ù–û–ü–ö–ò "–î–û–ë–ê–í–ò–¢–¨" –ò "–ù–ê–ó–ê–î –í –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨" –£–î–ê–õ–ï–ù–´ –ò–ó –≠–¢–û–ô –ö–õ–ê–í–ò–ê–¢–£–†–´

    # –ü—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ–º InlineKeyboardMarkup, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–π —Å–æ–±—Ä–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ä—è–¥–æ–≤
    keyboard = InlineKeyboardMarkup(inline_keyboard=all_rows)

    return keyboard

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (–¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è goto_delete_page) ---

def register_pagination_handlers(router: Router, check_admin_access_func, get_items_page_func, get_total_items_count_func):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º –∏ –∫–Ω–æ–ø–∫–∏ "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É".
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤, –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–≤–Ω–µ.
    """

    @router.callback_query(F.data.startswith("navigate_delete_"))
    async def navigate_delete_page(callback: CallbackQuery):
        if not await check_admin_access_func(callback): return

        try:
            parts = callback.data.split(":")
            pagination_prefix = parts[0] # –Ω–∞–ø—Ä–∏–º–µ—Ä, "navigate_delete_course"
            category = pagination_prefix.replace("navigate_delete_", "") # –ò–∑–≤–ª–µ–∫–∞–µ–º "course", "resource" –∏ —Ç.–¥.
            page_data = parts[1] # –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–ª–∏ "current_page_info"

            if page_data == "current_page_info":
                 # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (callback_data="ignore_page_info")
                 # –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Ç–µ–ø–µ—Ä—å –Ω–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞, –Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ —Ä–∞–≤–Ω–æ –º–æ–∂–µ—Ç —Å—Ä–∞–±–æ—Ç–∞—Ç—å –µ—Å–ª–∏ —Å—Ç–∞—Ä—ã–π callback_data
                 # –±—ã–ª navigate_delete_*:current_page_info. –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π.
                 await callback.answer("–í—ã –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.", show_alert=False)
                 return


            page = int(page_data) # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —á–∏—Å–ª–æ

            total_items = await get_total_items_count_func(category)
            total_pages = math.ceil(total_items / ADMIN_DELETE_ITEMS_PER_PAGE)

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            if page < 1 or (total_pages > 0 and page > total_pages) or (total_pages == 0 and page != 1):
                 await callback.answer("–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã.")
                 return

            items = await get_items_page_func(category, page, ADMIN_DELETE_ITEMS_PER_PAGE)

            # –ï—Å–ª–∏ –Ω–∞ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –Ω–æ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ > 0
            if not items and total_items > 0:
                 if total_pages > 0:
                      # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                      last_valid_page = total_pages
                      if last_valid_page < 1: last_valid_page = 1 # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ 1
                      last_page_callback_data = f"navigate_delete_{category}:{last_valid_page}"
                      # –°–æ–∑–¥–∞–µ–º –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π callback_data –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
                      new_callback = CallbackQuery(id=callback.id, from_user=callback.from_user, chat_instance=callback.chat_instance, data=last_page_callback_data, inline_message_id=callback.inline_message_id, message=callback.message) # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π CallbackQuery
                      await router.process_update(new_callback.update) # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π callback
                      return
                 # –ï—Å–ª–∏ total_pages —Å—Ç–∞–ª–æ 0 –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ –æ—à–∏–±–∫–∞ –ª–æ–≥–∏–∫–∏
                 empty_message = f"‚ÑπÔ∏è {category.capitalize()} –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
                 if category == "course": empty_message = "‚ÑπÔ∏è –ö—É—Ä—Å—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
                 elif category == "resource": empty_message = "‚ÑπÔ∏è –†–µ—Å—É—Ä—Å—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
                 elif category == "term": empty_message = "‚ÑπÔ∏è –¢–µ—Ä–º–∏–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
                 elif category == "group": empty_message = "‚ÑπÔ∏è –ì—Ä—É–ø–ø—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."

                 # –í–Ω–∏–º–∞–Ω–∏–µ: –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã —É–¥–∞–ª–µ–Ω—ã, –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é
                 # –≠—Ç–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å".
                 # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π –∏–ª–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∫–∏
                 from keyboards.admin_keyboard import manage_courses_keyboard, manage_resources_keyboard, manage_terms_keyboard, manage_groups_keyboard, admin_main_menu # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –º–µ–Ω—é

                 reply_kb = None
                 message_text = f"‚ÑπÔ∏è {category.capitalize()} –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
                 if category == "course":
                     reply_kb = manage_courses_keyboard()
                     message_text = "‚ÑπÔ∏è –ö—É—Ä—Å—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
                 elif category == "resource":
                      reply_kb = manage_resources_keyboard()
                      message_text = "‚ÑπÔ∏è –†–µ—Å—É—Ä—Å—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
                 elif category == "term":
                      reply_kb = manage_terms_keyboard()
                      message_text = "‚ÑπÔ∏è –¢–µ—Ä–º–∏–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
                 elif category == "group":
                      reply_kb = manage_groups_keyboard()
                      message_text = "‚ÑπÔ∏è –ì—Ä—É–ø–ø—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."

                 # –ï—Å–ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —É–¥–∞–ª–µ–Ω—ã, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ç–µ–∫—Å—Ç "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç" –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
                 if reply_kb:
                    await callback.message.edit_text(message_text, reply_markup=reply_kb)
                 else:
                    # –ï—Å–ª–∏ –Ω–µ —Å–º–æ–≥–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –∞–¥–º–∏–Ω –º–µ–Ω—é
                    await callback.message.edit_text("‚ÑπÔ∏è –≠–ª–µ–º–µ–Ω—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.", reply_markup=admin_main_menu())

                 await callback.answer("–í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —É–¥–∞–ª–µ–Ω—ã.")
                 return


            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã ID –∏ –∏–º–µ–Ω–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            item_id_index = 0 # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ID –ø–µ—Ä–≤—ã–π
            item_name_index = 1 # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–º—è –≤—Ç–æ—Ä–æ–π
            item_callback_prefix_base = f"del_{category}_by_id" # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ ID

            if category == "term":
                item_id_index = 0 # –î–ª—è —Ç–µ—Ä–º–∏–Ω–æ–≤ –∏–º—è (—Ç–µ—Ä–º–∏–Ω) –ø–µ—Ä–≤—ã–π –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ ID
                item_name_index = 0 # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–∂–µ –∏–º—è
                item_callback_prefix_base = "del_term_by_name" # –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ –∏–º–µ–Ω–∏

            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            keyboard = await create_paginated_keyboard(
                items=items,
                page=page,
                items_per_page=ADMIN_DELETE_ITEMS_PER_PAGE,
                total_items=total_items,
                pagination_callback_prefix=pagination_prefix,
                item_callback_prefix=item_callback_prefix_base, # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–µ—Ñ–∏–∫—Å –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞–¥ —ç–ª–µ–º–µ–Ω—Ç–æ–º
                item_id_index=item_id_index,
                item_name_index=item_name_index,
                # –ê—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–î–æ–±–∞–≤–∏—Ç—å" –∏ "–ù–∞–∑–∞–¥" –£–î–ê–õ–ï–ù–´
            )
            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–∞–º–µ–Ω—è—è —Å—Ç–∞—Ä—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –Ω–æ–≤—É—é
            message_text = f"üóëÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ {category.capitalize()} –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:"
            if category == "course": message_text = "üóëÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:"
            elif category == "resource": message_text = "üóëÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—É—Ä—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:"
            elif category == "term": message_text = "üóëÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:"
            elif category == "group": message_text = "üóëÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:"

            await callback.message.edit_text(message_text, reply_markup=keyboard)
            await callback.answer()

        except ValueError:
            logger.error(f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ callback_data –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: {callback.data}")
            await callback.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.", show_alert=True)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ ({category}, page {page_data}): {e}")
            await callback.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.", show_alert=True)

    # --- –î–û–ë–ê–í–õ–ï–ù –û–ë–†–ê–ë–û–¢–ß–ò–ö –î–õ–Ø –ö–ù–û–ü–ö–ò "–ü–ï–†–ï–ô–¢–ò –ù–ê –°–¢–†–ê–ù–ò–¶–£" ---
    @router.callback_query(F.data.startswith("goto_delete_page:"))
    async def ask_for_page_number(callback: CallbackQuery, state: SSLContext):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if not await check_admin_access_func(callback): return

        try:
            category = callback.data.split(":")[1] # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            await state.set_state("handlers.admin_handler:AdminStates.waiting_for_goto_page_number") # –£–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ–µ –∏–º—è —Å–æ—Å—Ç–æ—è–Ω–∏—è, —Ç.–∫. FSMState –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤ –¥—Ä—É–≥–æ–º —Ñ–∞–π–ª–µ
            await state.update_data(goto_category=category, original_message_id=callback.message.message_id, chat_id=callback.message.chat.id)

            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∑–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            await callback.message.edit_text("üî¢ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")
            await callback.answer()

        except IndexError:
            logger.error(f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç callback_data –¥–ª—è goto_delete_page: {callback.data}")
            await callback.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã.", show_alert=True)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ goto_delete_page: {e}")
            await callback.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", show_alert=True)
    # --- –ö–û–ù–ï–¶ –î–û–ë–ê–í–õ–ï–ù–ù–û–ì–û –û–ë–†–ê–ë–û–¢–ß–ò–ö–ê ---